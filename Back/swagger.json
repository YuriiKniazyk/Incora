{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Feed",
    "description": "RSS Parser",
    "contact": {
      "name": "Yurii Kniazyk",
      "email": "y.kniazyk@gmail.com",
      "url": "https://github.com/YuriiKniazyk"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "localhost:3300",
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/feed/login": {
      "post": {
        "description": "This method is used to authenticate basic user",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "required": true,
            "description": "User to login system",
            "schema": {
              "properties": {
                "username": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                },
                "password": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login success",
            "schema": {
              "type": "object",
              "properties": {
                "succses": {
                  "type": "boolean",
                  "exampel": true
                },
                "token": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "token"
                    },
                    "type": {
                      "type": "string",
                      "example": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "This error will be thawed when some some filed is empty",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Some field is empty"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This error will be present when user is not present in dataBase",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You are not register!!!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed/create": {
      "post": {
        "description": "This method is used to create Feed",
        "parameters": [
          {
            "name": "created",
            "in": "body",
            "required": true,
            "description": "Created feed",
            "schema": {
              "properties": {
                "username": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                },
                "title": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                },
                "url": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "succses": {
                  "type": "boolean",
                  "exampel": true
                },
                "msg": {
                  "type": "string",
                  "exampel": "ok"
                },
                "feed": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "title": {
                      "type": "string",
                      "example": "admin"
                    },
                    "url": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "This error will be thawed when some some filed is empty",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Some field is empty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed/delete": {
      "delete": {
        "description": "This method is used to delete Feed by id&username",
        "parameters": [
          {
            "name": "delete",
            "in": "body",
            "required": true,
            "description": "Delete feed",
            "schema": {
              "properties": {
                "id": {
                  "type": "number",
                  "required": true,
                  "exampel": "1"
                },
                "username": {
                  "type": "string",
                  "required": true,
                  "exampel": "admin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "succses": {
                  "type": "boolean",
                  "exampel": true
                },
                "msg": {
                  "type": "string",
                  "exampel": "ok"
                }
              }
            }
          },
          "400": {
            "description": "This error will be thawed when parametr id undefined",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "WHERE parameter \"id\" has invalid \"undefined\" value"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed/list": {
      "get": {
        "description": "This method is used to list all Feed",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "succses": {
                  "type": "boolean",
                  "exampel": true
                },
                "allFeed": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "title": {
                      "type": "string",
                      "example": "NASA Breaking news"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://www.nasa.gov/rss/dyn/breaking_news.rss"
                    },
                    "definition": {
                      "type": "string",
                      "example": ""
                    },
                    "...": {
                      "example": "..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "This error will be thawed when some error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "error.message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed/fetchfeed": {
      "get": {
        "description": "This method is used to pars Feed",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "name": "username",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "succses": {
                  "type": "boolean",
                  "exampel": true
                },
                "feeddb": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "title": {
                      "type": "string",
                      "example": "NASA Breaking news"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://www.nasa.gov/rss/dyn/breaking_news.rss"
                    },
                    "definition": {
                      "type": "string",
                      "example": "./files/admin/rssfile1.json"
                    }
                  }
                },
                "rss": {
                  "type": "object",
                  "properties": {
                    "items": [
                      {
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": "1"
                          },
                          "username": {
                            "type": "string",
                            "example": "admin"
                          },
                          "title": {
                            "type": "string",
                            "example": "NASA Breaking news"
                          },
                          "url": {
                            "type": "string",
                            "example": "https://www.nasa.gov/rss/dyn/breaking_news.rss"
                          },
                          "definition": {
                            "type": "string",
                            "example": "./files/admin/rssfile1.json"
                          },
                          "...": {
                            "example": "..."
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "This error will be thawed when some error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "error.message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}